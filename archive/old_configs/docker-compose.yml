version: '3.8'

services:
  # Backend API Service
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=sqlite:///./data_analysis.db
      - DEBUG=true
      - API_HOST=0.0.0.0
      - API_PORT=8000
    volumes:
      - ./backend:/app
      - ./uploads:/app/uploads
      - ./db:/app/db
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - app-network

  # Frontend React Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_VERSION=1.0.0
      - REACT_APP_ENVIRONMENT=development
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - app-network

  # SQLite Database (for development)
  # Note: In Version 1, we'll use file-based SQLite
  # Version 2 will migrate to PostgreSQL
  db:
    image: alpine:latest
    command: sh -c "mkdir -p /data && touch /data/data_analysis.db && tail -f /dev/null"
    volumes:
      - ./db:/data
    networks:
      - app-network

  # Future: Redis Cache (Version 2+)
  # redis:
  #   image: redis:7-alpine
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   networks:
  #     - app-network

  # Future: PostgreSQL (Version 2+)
  # postgres:
  #   image: postgres:15-alpine
  #   environment:
  #     POSTGRES_DB: data_analysis
  #     POSTGRES_USER: user
  #     POSTGRES_PASSWORD: password
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   networks:
  #     - app-network

volumes:
  # redis_data:
  # postgres_data:
  uploads_data:

networks:
  app-network:
    driver: bridge
