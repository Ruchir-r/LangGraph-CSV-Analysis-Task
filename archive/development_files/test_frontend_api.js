#!/usr/bin/env node

/**
 * Test script to verify frontend API integration
 * Tests the V2 chat API with the same parameters the frontend uses
 */

const fetch = require('node-fetch');

const API_BASE_URL = 'http://localhost:8000';

async function testChatAPI() {
  console.log('üß™ Testing Frontend API Integration...\n');

  // Test 1: Simple greeting (no files, no workflow)
  console.log('Test 1: Simple greeting without files');
  try {
    const response = await fetch(`${API_BASE_URL}/api/v2/chat/query`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        message: "Hello! What can you help me with?",
        session_id: "frontend-test-123",
        file_context: null,
        enable_workflow: false
      }),
    });

    const data = await response.json();
    console.log('‚úÖ Response:', data.response.substring(0, 100) + '...');
    console.log('   Workflow Initiated:', data.workflow_initiated);
    console.log('   Analysis Scope:', data.analysis_scope);
    console.log();
  } catch (error) {
    console.error('‚ùå Test 1 failed:', error.message);
  }

  // Test 2: Math question (no workflow needed)
  console.log('Test 2: Math calculation');
  try {
    const response = await fetch(`${API_BASE_URL}/api/v2/chat/query`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        message: "What is 25 times 8?",
        session_id: "frontend-test-123",
        file_context: null,
        enable_workflow: false
      }),
    });

    const data = await response.json();
    console.log('‚úÖ Response:', data.response);
    console.log('   Workflow Initiated:', data.workflow_initiated);
    console.log();
  } catch (error) {
    console.error('‚ùå Test 2 failed:', error.message);
  }

  // Test 3: Data analysis question with file context (workflow enabled)
  console.log('Test 3: Analysis query with file context');
  try {
    const response = await fetch(`${API_BASE_URL}/api/v2/chat/query`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        message: "Can you analyze the revenue trends in my uploaded data?",
        session_id: "frontend-test-123",
        file_context: [13], // File ID from our earlier upload
        enable_workflow: true
      }),
    });

    const data = await response.json();
    console.log('‚úÖ Response:', data.response.substring(0, 150) + '...');
    console.log('   Workflow Initiated:', data.workflow_initiated);
    console.log('   Files in Context:', data.files_in_context);
    console.log('   Estimated Duration:', data.estimated_duration);
    console.log();
  } catch (error) {
    console.error('‚ùå Test 3 failed:', error.message);
  }

  console.log('üéâ Frontend API integration tests completed!');
  console.log('\nüìã Summary:');
  console.log('- The V2 chat API is working correctly');
  console.log('- Real AI responses are being generated by Gemini');
  console.log('- Frontend should now show intelligent responses instead of placeholders');
  console.log('\nüåê Open http://localhost:3000 and test the chat interface!');
}

testChatAPI().catch(console.error);